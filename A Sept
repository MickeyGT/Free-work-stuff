#include <iostream>
#include <fstream>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
#include <list>
#include <bitset>
#include <vector>
using namespace std;
unsigned int g1, g2, roundpoints;
void f(unsigned char jan, unsigned char jac, unsigned char jbn, unsigned char jbc, bool r)
{
	static int A[64][9],pointsa,pointsb, rounds = 0,stateG,state,prevcard;
	if (g1 == 0)
	{
		memset(A, 0, sizeof(A));
		state = rounds = pointsa = pointsb = roundpoints = prevcard = state = stateG = 0;
		g1 = 1;
	}
	if (A[jan][jac] == 1)
	{
		cout << "Invalid"<<endl;
		return;
	}
	if (A[jbn][jbc] == 1)
	{
		cout << "Invalid"<<endl;
		return;
	}
	if (jan == jbn && jac == jbc)
	{
		cout << "Invalid"<<endl;
		return;
	}
	rounds++;
	A[jan][jac] = A[jbn][jbc]=1;
	if (r==0)
		stateG = state;
	else
		state = stateG;
	
	if (r==0)
	{
		if (stateG % 2 == 0)
		{
			pointsa += roundpoints;
			if (rounds < 16)
				cout << "Jucator curent:a\n";
		}
		else
		{
			pointsb += roundpoints;
			if (rounds < 16)
				cout << "Jucator curent:b\n";
		}
	}
	else
	{
		if (stateG % 2 == 0)
		{
			if (rounds < 16)
				cout << "Jucator curent:a\n";
		}
		else
		{
			if (rounds < 16)
				cout << "Jucator curent:b\n";
		}
	}
	if (!r)
	{
		if (state % 2 == 0)
			prevcard = jan;
		else
			prevcard = jbn;
		roundpoints = 0;
	}

	if (jan == 10 || jan == 11)
			roundpoints++;
	if (jbn == 10 || jbn == 11)
		roundpoints++;

	if (state % 2 == 0)
	{
		if (jbn == prevcard || jbn == 7)
				state++;
	}
	else
	{
		if (jan == prevcard || jan == 7)
				state++;
		
	}

	if (rounds == 16)
	{
		if (roundpoints)
		{
			if (state % 2 == 0)
				pointsa += roundpoints;
			else
				pointsb += roundpoints;
			
		}
		cout << "Final joc:" << pointsa << "-" << pointsb << endl;
		g1 = 0;
	}
}
int main(int argc, char **argv)
{
	ifstream g("a.in");
	g1 = 0, g2 = 0, roundpoints = 0;
	unsigned int e1, e2, e3, e4, e5;
	while (g >> e1 >> e2 >> e3 >> e4 >> e5)
		f(e1, e2, e3, e4, e5 );
		return 0;
}


