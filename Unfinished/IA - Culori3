#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<unordered_set>
#include<set>
#include<math.h>
using namespace std;
int n, i, total[1200], prv[6][1200], j, nr, len, k, p, carry, temp[1200], cifre, carry2, poz1, poz2;
ifstream f("file.in");
ofstream g("file.out");
void adunare(int x[1200], int y[1200], int z[1200])
{
	int cifre = max(x[0], y[0]);
	carry = 0;
	for (p = 1; p <= cifre; p++)
	{
		z[p] = (x[p] + y[p] + carry) % 10;
		if (x[p] + y[p] + carry >= 10)
			carry = 1;
		else
			carry = 0;
	}
	if (x[cifre] + y[cifre] + carry >= 10)
	{
		z[0] = cifre + 1;
		z[cifre + 1] = 1;
	}
	else
	{
		z[0] = cifre;
	}
}
void functie1()
{
	for (j = 2; j <= n; j++)
	{
		if (j % 2 == 0)
		{
			//adunare(1,3,2/5,3,4)
			cifre = max(prv[3][0], prv[1][0]);
			cifre = max(cifre, prv[5][0]);
			carry = 0;
			carry2 = 0;
			for (p = 1; p <= cifre + 1; p++)
			{
				prv[2][p] = (prv[3][p] + prv[1][p] + carry) % 10;
				carry = (prv[3][p] + prv[1][p] + carry) / 10;
				if (prv[2][p] != 0)
					poz1 = p;
				prv[4][p] = (prv[3][p] + prv[5][p] + carry2) % 10;
				carry2 = (prv[3][p] + prv[5][p] + carry2) / 10;
				if (prv[4][p] != 0)
					poz2 = p;
				prv[1][p - 1] = prv[3][p - 1] = prv[5][p - 1] = 0;
			}
			prv[2][0] = poz1;
			prv[4][0] = poz2;
			prv[1][cifre] = prv[3][cifre] = prv[5][cifre] = 0;
			//se termina adunare(2,4,3)
		}
		else
		{
			prv[1][0] = prv[2][0];
			prv[5][0] = prv[4][0];
			//adunare(2,4,3)
			cifre = max(prv[2][0], prv[4][0]);
			carry = 0;
			for (p = 1; p <= cifre; p++)
			{
				prv[1][p] = prv[2][p];
				prv[5][p] = prv[4][p];
				prv[3][p] = (prv[2][p] + prv[4][p] + carry) % 10;
				if (prv[2][p] + prv[4][p] + carry >= 10)
					carry = 1;
				else
					carry = 0;
				prv[2][p - 1] = prv[4][p - 1] = 0;
			}
			if (prv[2][cifre] + prv[4][cifre] + carry >= 10)
			{
				prv[3][0] = cifre + 1;
				prv[3][cifre + 1] = 1;
			}
			else
			{
				prv[3][0] = cifre;
			}
			prv[2][cifre] = prv[4][cifre] = 0;
			//se termina adunare(2,4,3)
		}
	}
	if (n % 2 == 0)
	{
		for (i = 1; i <= 8; i++)
		{
			adunare(prv[2], total, temp);
			adunare(prv[4], temp, total);
		}
		len = total[0];
		for (i = len; i >= 1; i--)
		{
			g << total[i];
		}
	}
	else
	{
		for (i = 1; i <= 8; i++)
		{
			adunare(prv[1], total, temp);
			adunare(prv[3], temp, total);
			adunare(prv[5], total, temp);
			len = temp[0];
			for (j = len; j >= 0; j--)
			{
				total[i] = temp[i];
				temp[i] = 0;
			}
		}
		len = total[0];
		for (i = len; i >= 1; i--)
		{
			g << total[i];
		}
	}
	
}

int main()
{
	f >> n;
	prv[1][0] = 1;
	prv[1][1] = 1;
	functie1();
	return 0;
}
