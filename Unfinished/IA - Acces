#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<unordered_set>
#include<set>
#include<math.h>
using namespace std;
int n, m, q, i, j, c, l, mat[1010][1010], beg, endc, k, nr,rez[1010][1010],number;
int main()
{
	ifstream f("acces.in");
	ofstream g("acces.out");
	f >> n >> m;
	for (i = 1; i <= n; i++)
		for (j = 1; j <= m; j++)
		{
			f >> mat[i][j];
			if (mat[i][j] == 1 && (i == 1 || j == 1))
				rez[i][j] = 0;
			else
				if (mat[i][j] == 1 && mat[i][j - 1] == 0 && (mat[i - 1][j] == 0 || i == 1))
					rez[i][j] = rez[i-1][j - 1] * (-1);
				else
					if (mat[i][j] == 1 && mat[i - 1][j] == 1)
						rez[i][j] = rez[i - 1][j];
					else
						if(mat[i][j] == 1 && mat[i][j - 1] == 1)
							rez[i][j] = rez[i][j-1];
						else
							if (mat[i][j] == 0)
							{
								if (mat[i][j - 1] == 0 && mat[i - 1][j] == 0)
								{
									if (rez[i - 1][j - 1] > 0)
										rez[i][j] = 1 + rez[i - 1][j] + rez[i][j - 1] - rez[i - 1][j - 1];
									else
										rez[i][j] = 1 + rez[i - 1][j] + rez[i][j - 1] + rez[i - 1][j - 1];
								}
								else
									if (mat[i][j - 1] == 1)
										rez[i][j] = rez[i - 1][j] + 1;
									else
										if(mat[i-1][j] == 1)
											rez[i][j] = rez[i][j-1] + 1;
							}
		}
	f >> q;
	for (k = 1; k <= q; k++)
	{
		f >> l >> c;
		g << rez[l][c]<<"\n";
	}
	return 0;
}
