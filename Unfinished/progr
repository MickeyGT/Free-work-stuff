#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<queue>
#include<math.h>
#include<functional>
#include<unordered_set>
#include<set>
#include<iomanip>
#include<bitset>
using namespace std;
int t, n,v[2020],k,i,j,diff;
map<int, int>mp[2002];
map<int, int>::iterator it,iter;
map<int, int>freq;
int main()
{
	ifstream f("file.in");
	ofstream g("file.out");
	//ifstream f("progr.in");
	//ofstream g("progr.out");
	f >> t;
	for (k = 1; k <= t; k++)
	{
		f >> n;
		for (i = 1; i <= n; i++)
		{
			f >> v[i];
		}
		sort(v + 1, v + n + 1);
		for(i=1;i<=n;i++)
			for (j = i - 1; j >= 1; j--)
			{
				diff = v[i] - v[j];
				it = mp[j].find(diff);
				if (it != mp[j].end())
					mp[i].insert(make_pair(diff, it->second + 1));
				else
					mp[i].insert(make_pair(diff, 1));
			}
		for (i = 1; i <= n; i++)
		{
			it = mp[i].begin();
			while (it != mp[i].end())
			{
				iter = freq.find(it->first);
				if (iter == freq.end())
					freq.insert(make_pair(it->first, it->second));
				else
					if (iter->second < it->second)
						iter->second = it->second;
				it++;
			}
			mp[i].clear();
		}
		g << freq.size()<<'\n';
		freq.clear();
		memset(v, 0, sizeof(v));
	}
	return 0;
}
