#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<math.h>
#include<functional>
#include<unordered_set>
#include<set>
#include<iomanip>
#include<bitset>
using namespace std;
char c1, c2, c3,c;
int p, n, i,nr1,nr2,nr3,k,len,fr[4],max1,ok;
vector<char>sirag;
int main()
{
	//ifstream f("file.in");
	//ofstream g("file.out");
	ifstream f("cristale.in");
	ofstream g("cristale.out");
	f >> c1 >> c2 >> c3;
	f >> p;
	for (k = 1; k <= p; k++)
	{
		f >> n;
		for (i = 1; i <= n; i++)
		{
			f >> c;
			sirag.push_back(c);
		}
		len = sirag.size();
		i = 0;
		ok = 1;
		while (ok)
		{
			ok = 0;
			while (i < sirag.size() - 1)
			{
				if (sirag[i] != sirag[i + 1])
				{
					ok = 1;
					if (sirag[i] == c1)
					{
						if (sirag[i + 1] == c2)
							sirag[i + 1] = c3;
						else
							sirag[i + 1] = c2;
					}
					if (sirag[i] == c2)
					{
						if (sirag[i + 1] == c1)
							sirag[i + 1] = c3;
						else
							sirag[i + 1] = c1;
					}
					if (sirag[i] == c3)
					{
						if (sirag[i + 1] == c2)
							sirag[i + 1] = c1;
						else
							sirag[i + 1] = c2;
					}
					sirag.erase(sirag.begin() + i);
				}
				else
					i++;
			}
			i = 0;
		}
		g << sirag.size() << '\n';
		sirag.clear();
	}
	return 0;
}
