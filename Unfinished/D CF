#include<fstream>
#include<cstring>
#include<queue>
#include<algorithm>
#include<string.h>
#include<bitset>
#include<ctime>
#include<set>
#include<cmath>
#include<unordered_map>
#include<iomanip>
#include<map>
#include<stack>
#include<vector>
#include<bitset>
#include<functional>
#include<iostream>
#include<deque>
#include<unordered_set>
#include<queue>
#include<list>
#include<array>
#include<ctype.h>
using namespace std;
int i, j, k, ok, nr, n, m, el, min1, max1, x, y, a, b,last,lastshop;
deque<int>shop[2000100];
deque<int>::iterator iter;
int fridge[2000100];
vector<int>rez;
vector<int>::iterator it;
int main()
{
	cin >> n >> m >> k;
	for (i = 1; i <= n; i++)
	{
		cin >> el;
		if (el <= 2000000)
		{
			fridge[el]++;
			last = max(el, last);
		}
	}
	for (i = 1; i <= m; i++)
	{
		cin >> el;
		if (el <= 2000000)
		{
			shop[el].push_back(i);
			lastshop = max(el, lastshop);
		}

	}
	for (i = 0; i <= last; i++)
	{
		if (fridge[i] > k)
		{
			cout << "-1";
			return 0;
		}
		else
		{
			nr = k - fridge[i];
			j = 0;
			x = max(x, i);
			while (nr != j)
			{
				for (iter = shop[x].begin(); j != nr&&iter != shop[x].end();iter= shop[x].begin())
				{
					rez.push_back(*iter);
					shop[x].pop_front();
					j++;
				}
				if (nr != j&&x >= lastshop&&iter == shop[lastshop].end())
					break;
				else
					if (nr != j)
						x++;
			}
		}
	}
	for (i = last+1; shop[i].size() >= k; i++)
	{
		for (iter = shop[i].begin(), j = 0; j != k&&iter != shop[i].end(); iter++, j++)
		{
			rez.push_back(*iter);
		}
	}
	cout << rez.size() << '\n';
	for (it = rez.begin(); it != rez.end(); it++)
		cout << *it << ' ';
	return 0;
}
