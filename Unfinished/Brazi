#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<unordered_set>
#include<set>
#include<math.h>
#include<bitset>
using namespace std;
unordered_map<bitset<1050>, int>mp;
unordered_map<bitset<1050>, int>::iterator it;
deque<int>deq;
int n, m,brad[1050],k,t,i,x,y,type,j;
void add(int x, int y, int type)
{
	int nod = 1;
	deq.clear();
	deq.push_back(nod);
	while (deq.size() != 0)
	{
		for (j = 1; j <= deq.size(); j++)
		{
			int el = *deq.begin();
			deq.pop_front();
			if (brad[el] == x)
			{
				if (type == 0)
					brad[el<<1] = y;
				else
					brad[1+(el<<1)] = y;
				return;
			}
			else
			{
				if (brad[el << 1] != 0)
					deq.push_back(el << 1);
				if (brad[1 + (el << 1)] != 0)
					deq.push_back(1+ (el << 1));
			}
		}
	}
}
int main()
{
	ifstream f("file.in");
	ofstream g("file.out");
	//ifstream f("brazi.in");
	//ofstream g("brazi.out");
	f >> t;
	for (k = 1; k <= t; k++)
	{
		f >> n;
		for (i = 1; i <= n-1; i++)
		{
			f >> x>>y>>type;
			if (i == 1)
				brad[1] = x;
			add(x, y, type);
		}
		bitset<1050>temp;
		for (i = 0; i <= 1040; i++)
			if (brad[i] != 0)
				temp[i] = 1;
		it = mp.find(temp);
		if (it != mp.end())
		{
			g << it->second << '\n';
			it->second++;
		}
		else
		{
			g << "0\n";
			mp.insert(make_pair(temp, 1));
		}
		memset(brad, 0, sizeof(brad));
	}
	return 0;
}
