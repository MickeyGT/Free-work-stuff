#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<unordered_set>
#include<set>
#include<math.h>
using namespace std;
set<int>poz;
set<int>neg;
set<int>elements;
set<int>::iterator it,it1,it2,elf1,elf2,elf3;
long long n,t,el,rez,nr,i,j,k,m,v[13];
int main()
{
	ifstream f("produs4.in");
	ofstream g("produs4.out");
	f >> t;
	for (m = 1; m <= t; m++)
	{
		f >> n;
		poz.clear();
		neg.clear();
		elements.clear();
		for (i = 1; i <= n; i++)
		{
			f >> el;
			if (el > 0)
				poz.insert(el);
			else
				if (el <= 0)
					neg.insert(el);
		}
		if (poz.size() != 0)
		{
			it = poz.end();
			it--;
			if (poz.size() <= 3)
				elements.insert(*it);
			for (i = 1; i <= 3; i++)
			{
				if (it != poz.begin())
				{
					elements.insert(*it);
					it--;
				}
			}
			it = poz.begin();
			for (i = 1; i <= 3; i++)
			{
				if (it != poz.end())
				{
					elements.insert(*it);
					it++;
				}
			}
			if (poz.size() <= 3)
				elements.insert(*poz.begin());
		}
		if (neg.size() != 0)
		{
			it = neg.end();
			it--;
			if (neg.size() <= 3)
				elements.insert(*it);
			for (i = 1; i <= 3; i++)
			{
				if (it != neg.begin())
				{
					elements.insert(*it);
					it--;
				}
			}
			if (neg.size() <= 3)
				elements.insert(*neg.begin());
			it = neg.begin();
			for (i = 1; i <= 3; i++)
			{
				if (it != neg.end())
				{
					elements.insert(*it);
					it++;
				}
			}
		}
		elf1 = elements.end();
		elf1--;
		elf2 = elements.end();
		elf2--;
		elf2--;
		rez = 1 << 31;
		for (it = elements.begin(); it != elf2; it++)
			for (it1 = it, it1++; it1 != elf1; it1++)
				for (it2 = it1, it2++; it2 != elements.end(); it2++)
					if ((*it)*(*it1)*(*it2) > rez)
						rez = (*it)*(*it1)*(*it2);
		g << rez<<"\n";
	}
	return 0;
}
