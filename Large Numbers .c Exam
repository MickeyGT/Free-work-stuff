#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
int a[1001], b[1001], rez[1001],n1,n2;
char c,type;
void adunare()
{
	int carry,el,i,val,aux;
	memset(a, 0, sizeof(a));
	memset(b, 0, sizeof(b));
	memset(rez, 0, sizeof(rez));
	c = getc(stdin);
	c = getc(stdin);
	a[1] = c - '0';
	a[0] = 1;
	while (c != '\n')
	{
		c = getc(stdin);
		a[++a[0]] = c - '0';
	}
	a[a[0]] = 0;
	a[0]--;
	for (i = 1;i <= a[0] / 2;i++)
	{
		aux = a[i];
		a[i] = a[a[0] - i + 1];
		a[a[0] - i + 1] = aux;
	}
	c = getc(stdin);
	b[1] = c - '0';
	b[0] = 1;
	while (c != '\n')
	{
		c = getc(stdin);
		b[++b[0]] = c - '0';
	}
	b[b[0]] = 0;
	b[0]--;
	for (i = 1;i <= b[0] / 2;i++)
	{
		aux = b[i];
		b[i] = b[b[0] - i + 1];
		b[b[0] - i + 1] = aux;
	}
	el = a[0];
	if (a[0] < b[0])
		el = b[0];
	
	carry = 0;
	for (i = 1;i <= el;i++)
	{
		val = a[i] + b[i]+carry;
		if (val >= 10)
		{
			carry = 1;
			rez[i] = val % 10;
		}
		else
		{
			carry = 0;
			rez[i] = val;
		}
	}
	if (carry == 1)
	{
		rez[el + 1] = 1;
		rez[0] = el + 1;
	}
	else
	{
		rez[0] = el;
	}
	for (i = rez[0];i >= 1;i--)
		printf("%d", rez[i]);
	printf("\n");
}
void complement()
{
	int i,el;
	memset(a, 0, sizeof(a));
	memset(b, 0, sizeof(b));
	memset(rez, 0, sizeof(rez));
	c = getc(stdin);
	c = getc(stdin);
	a[1] = c - '0';
	a[0] = 1;
	while (c != '\n')
	{
		c = getc(stdin);
		a[++a[0]] = c - '0';
	}
	a[0]--;
	el = a[0];
	while (a[el] == 0)
		el--;
	a[el] = (10 - a[el]);
	for (i = el-1;i >= 1;i--)
		a[i] = 9 - a[i];
	for (i = 1;i <= a[0];i++)
		printf("%d", a[i]);
}
int main()
{
	do
	{
		scanf("%c", &type);
		if (type == 'a')
			adunare();
		if (type == 'c')
			complement();
		printf("\n");
	} while (type != 'e');
	return 0;
	system("pause");
}
