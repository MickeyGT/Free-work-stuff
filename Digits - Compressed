#include <iostream>
#include <fstream>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
#include <list>
#include <bitset>
#include <vector>
char l[3][256];
using namespace std;
void f(char l[3][255], int s)
{
	int i = 2, j, k, nr = 0, nrinvalid = 0, v[42], f[42], ok = 0, invind, ind = 1;
	char m[42][10], x[8], q[4][99] = { "Numar invalid","Numarul este:","011101011","011000000" };
	memset(m, '0', sizeof(m));
	while (i <= strlen(l[1]))
	{
		for (j = 0;j <= 2;j++)
			l[j][i - 1] == '_' ? m[nr][j + 3] = '1' : 0, l[j][i] == '|' ? m[nr][j] = '1' : 0, l[j][i - 2] == '|' ? m[nr][j + 6] = '1' : 0;
		i += 5;
		m[nr][9] = '\0';
		!strcmp("011111011", m[nr])? 
			v[nr] = 8:
			!strcmp(q[2], m[nr])?
				v[nr] = 0:
				!strcmp("011111010", m[nr])?
					v[nr] = 9:
					!strcmp("001111011", m[nr])?
						v[nr] = 6:
						!strcmp("011111000", m[nr])?
							v[nr] = 3:
						    !strcmp("001111010", m[nr])?
								v[nr] = 5:
								!strcmp("011010010", m[nr])?
									v[nr] = 4:
									!strcmp("011100000", m[nr])?
										v[nr] = 7:
										!strcmp("010111001", m[nr])?
											v[nr] = 2:
											!strcmp(q[3], m[nr])?
												v[nr] = 1: (v[nr] = 10, nrinvalid++, invind = nr);										
		nr++;
	}

	if (nrinvalid > 1)
		cout << q[0];
	else if (nrinvalid)
	{
		for (i = 0;i < nr;i++)
			v[i] != 10 ? s -= v[i] : 0;
		s ? strcpy(x, q[3]) : strcpy(x, q[2]);

		nrinvalid = 0;
		for (i = 0;i < 7;i++)
			if (m[invind][i] != x[i])
				nrinvalid++;
		if (nrinvalid == 1)
		{
			v[invind] = s;
			cout << q[1];
			for (i = 0;i < nr;i++)
				cout << v[i];
		}
		else
			cout << q[0];;
	}
	else
	{
		f[0] = f[5] = 0;
		for (i = 0;i < nr;i++)
			s -= v[i],
			f[v[i]]++;
		!s ? ok = 1 : 0;
		s == 8 ? f[0] ? ok = 1 : 0 : 0;
		s == 1 || s == 4 ? f[5] ? ok = 1 : 0 : 0;

		if (ok)
		{
			cout << q[1];
			for (i = 0;i < nr;i++)
				s == 4 && v[i] == 5 ? cout << 9 : s == 1 && v[i] == 5 ? cout << 6 : s == 8 && v[i] == 0 ? cout << 8 : cout << v[i];
		}
		else
			cout << "Solutii multiple";

	}

}

int main(int argc, char **argv)
{
	ifstream in("cifre.in");

	char l[3][255];
	in.getline(l[0], 255);
	in.getline(l[1], 255);
	in.getline(l[2], 255);
	f(l, 44);
	system("pause");
	return 0;
}
