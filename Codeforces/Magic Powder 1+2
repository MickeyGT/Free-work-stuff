#include <stdlib.h>
#include<stdio.h>
#include<iostream>
using namespace std;
int n, k, i, costs[1001], s, ingr[1001],diff[1001], min1, max1,cookies;
int main()
{
	cin >> n >> k;
	for (i = 1;i <= n;i++)
	{
		cin >> costs[i];
		s += costs[i];
	}
	min1 = 42424242;
	max1 = -1;
	for (i = 1;i <= n;i++)
	{
		cin >> ingr[i];
		cookies = ingr[i] / costs[i];
		if (min1 > cookies)
			min1 = cookies;
	}
	for (i = 1;i <= n;i++)
		diff[i] = ingr[i] - (min1 * costs[i]);
	while (k>0)
	{
		for (i = 1;i <= n;i++)
			if (diff[i] >= costs[i])
				diff[i] -= costs[i];
			else
				if (k + diff[i] >= costs[i])
				{
					k =k - costs[i]+diff[i];
					diff[i] = 0;
				}
				else
				{
					cout << min1;
					return 0;
				}
		min1++;
	}
	cout << min1;
	return 0;
}
///////////////////////////////////////////////////////////////////////////////////////////////
#include <stdlib.h>
#include<stdio.h>
#include<iostream>
using namespace std;
long long n, k, i, costs[100001], s, ingr[100001],diff[100001], min1, max1,cookies;
int main()
{
	cin >> n >> k;
	for (i = 1;i <= n;i++)
	{
		cin >> costs[i];
		s += costs[i];
	}
	min1 = 424242424242;
	max1 = -1;
	for (i = 1;i <= n;i++)
	{
		cin >> ingr[i];
		cookies = ingr[i] / costs[i];
		if (min1 > cookies)
			min1 = cookies;
		if (cookies > max1)
			max1 = cookies;
	}
	for (i = 1;i <= n;i++)
		diff[i] = ingr[i] - (min1 * costs[i]);
	if(s*(max1-min1)<k)
	{
		min1 = min1 + k / s;
		k = k - s*(k / s);
	}
	while (min1<max1)
	{
		for (i = 1;i <= n;i++)
			if (diff[i] >= costs[i])
				diff[i] -= costs[i];
			else
				if (k + diff[i] >= costs[i])
				{
					k = k - costs[i] + diff[i];
					diff[i] = 0;
				}
				else
				{
					min1--;
					max1 = min1;
					break;
				}
		min1++;
	}
	if (k > s)
	{
		min1 = min1 + k / s;
		k = k - s*(k / s);
	}
	cout << min1;
	return 0;
}
