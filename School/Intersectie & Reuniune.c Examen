#include<stdio.h>
#include<stdlib.h>

struct Node
{
	int data;
	struct Node *next;
}*a_s, *a_f, *b_s, *b_f, *c_s, *c_f;


void push_set(struct Node **list_s, struct Node **list_f, int data)
{
	if (*list_s == NULL)
	{
		*list_s = (struct Node*)malloc(sizeof(struct Node));
		(*list_s)->data = data;
		(*list_s)->next = 0;
		*list_f = *list_s;
	}
	else
	{
		struct Node *p = (struct Node*)malloc(sizeof(struct Node));
		p->data = data;
		p->next = 0;
		(*list_f)->next = p;
		(*list_f) = p;
	}
}

void reunion(struct Node *a_s, struct Node *b_s, struct Node **c_s, struct Node **c_f)
{
	struct Node *i_a=a_s, *i_b=b_s;

	while (i_a != NULL && i_b != NULL)
	{
		if (i_a->data > i_b->data)
		{
			push_set(c_s, c_f, i_b->data);
			i_b = i_b->next;
		}
		else if (i_a->data < i_b->data)
		{
			push_set(c_s, c_f, i_a->data);
			i_a = i_a->next;
		}
		else
		{
			if (*c_f != NULL && (*c_f)->data != i_a->data)
				push_set(c_s, c_f, i_b->data);
			else if (*c_f == NULL)
				push_set(c_s, c_f, i_b->data);
			i_a = i_a->next;
			i_b = i_b->next;
			
		}
	}

	while (i_a != NULL)
	{
		push_set(c_s, c_f, i_a->data);
		i_a = i_a->next;
	}

	while (i_b != NULL)
	{
		push_set(c_s, c_f, i_b->data);
		i_b = i_b->next;
	}

}

void interesction(struct Node *a_s, struct Node *b_s, struct Node **c_s, struct Node **c_f)
{
	struct Node *i_a = a_s, *i_b = b_s;

	while (i_a != NULL && i_b != NULL)
	{
		if (i_a->data > i_b->data)
			i_b = i_b->next;
		else if (i_a->data < i_b->data)
			i_a = i_a->next;
		else
		{
			if (*c_f != NULL && (*c_f)->data != i_a->data)
				push_set(c_s, c_f, i_b->data);
			else if(*c_f == NULL)
				push_set(c_s, c_f, i_b->data);
			i_a = i_a->next;
			i_b = i_b->next;

		}
	}

}


int main()
{
	char type;

	do
	{
		scanf("%c", &type);
		if (type != 'x')
		{
			if (type == 'i')
			{
				int n, i, e;
				struct Node *el;
				scanf("%d", &n);

				a_s = b_s = a_f = b_f = c_s = c_f = NULL;

				for (i = 1;i <= n;++i)
				{
					scanf("%d", &e);
					push_set(&a_s, &a_f, e);
				}

				scanf("%d", &n);

				for (i = 1;i <= n;++i)
				{
					scanf("%d", &e);
					push_set(&b_s, &b_f, e);
				}

				interesction(a_s, b_s, &c_s, &c_f);

				el = c_s;

				while (el != NULL)
				{
					printf("%d ", el->data);
					el = el->next;
				}

				printf("\n");

			}
			else if (type == 'u')
			{
				int n, i, e;
				struct Node *el;

				scanf("%d", &n);

				a_s = b_s = a_f = b_f = c_s = c_f = NULL;

				for (i = 1;i <= n;++i)
				{
					scanf("%d", &e);
					push_set(&a_s, &a_f, e);
				}

				scanf("%d", &n);

				for (i = 1;i <= n;++i)
				{
					scanf("%d", &e);
					push_set(&b_s, &b_f, e);
				}

				reunion(a_s, b_s, &c_s, &c_f);

				el = c_s;

				while (el != NULL)
				{
					printf("%d ", el->data);
					el = el->next;
				}

				printf("\n");
			}
		}
	} while (type != 'x');


	return 0;
}
