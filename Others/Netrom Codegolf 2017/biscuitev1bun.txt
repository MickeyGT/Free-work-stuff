#include <iostream>
#include <fstream>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
#include <list>
#include <bitset>
#include <vector>
using namespace std;
int nrMutari, l, c, d;

static unsigned long g1, g2, g3;


void f(unsigned short l, unsigned short c, unsigned short d)
{
	static int nrPoints1, nrPoints2, mat[5][7][7], player, nrbete;
	int dir1[] = { 1, 0, -1, 0 }, dir2[] = { 0, -1, 0, 1 }, dir3[] = { 0,1,0,1 }, dir4[] = { 0,1,1,0 }, ok = 1, i = 0;
	static bitset<5>nrs[7][7];
	if (!g1)
	{
		g1 = 1;
		nrbete = nrPoints1 = nrPoints2 = player = 0;
		for (; i < 180; i++)
		{
			mat[i % 5][i / 30][i % 30 / 5] = 0;
			nrs[i / 30][i % 30 / 5][i % 5] = 0;
		}
	}
	for (i = 0; i < 6; i++)
		mat[0][0][i] = mat[3][i][0] = mat[2][5][i] = mat[1][i][5] = 4;



	if (nrbete == 60)
	{
		cout << "Jocul s-a terminat\n";
		return;
	}
	if (mat[d][l][c])
		cout << "Jucatorul " << (player ? 'B' : 'A') << " mutare invalida\n";
	else
	{
		nrbete++;
		int dnew = (d + 2) % 4;
		mat[d][l][c] = mat[dnew][l + dir1[dnew]][c + dir2[dnew]] = 4;


		d % 2 ? d % 3 ? nrs[l][c + 1][2] = nrs[l + 1][c + 1][0] = 1 : nrs[l][c][2] = nrs[l + 1][c][0] = 1 : d ? nrs[l + 1][c][1] = nrs[l + 1][c + 1][3] = 1 : nrs[l][c][1] = nrs[l][c + 1][3] = 1;

		for (i = 0; i < 4; i++)
			if (nrs[l + dir3[i]][c + dir4[i]].count() == 4)
			{
				ok = 0;
				if (player)
					nrPoints2++;
				else
					nrPoints1++;
				nrs[l + dir3[i]][c + dir4[i]].reset();
			}

		cout << "Jucatorul " << (player ? 'B' : 'A') << " mutare valida (" << nrPoints1 << ':' << nrPoints2 << ")\n";

		ok ? player = ~player : 0;

		if (nrbete > 59)
			cout << "Jocul s-a terminat\n";
	}

}


int main(int argc, char **argv)
{
	for (int i = 0; i < 6; ++i)
	{
		for (int j = 0; j < 6; ++j)
		{
			for (int d = 0; d < 4; ++d)
			{
				f(i, j, d);
			}
		}
	}
	return 0;
}
