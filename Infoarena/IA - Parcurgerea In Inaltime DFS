#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<unordered_set>
using namespace std;
vector <int> v[100010];
deque <int> deq;
int n, m, i, start, finish, nr, j, el;
bool viz[100010];
void dfs(int node)
{
	if (viz[node] == 0)
	{
		viz[node] = 1;
		if (v[node].size() != 0)
		{
			for (vector <int> ::iterator it = v[node].begin(); it != v[node].end(); it++)
				dfs(*it);
		}
	}
}
int main()
{
	ifstream f("dfs.in");
	ofstream g("dfs.out");
	f >> n >> m;
	for (i = 1; i <= m; i++)
	{
		f >> start >> finish;
		v[start].push_back(finish);
		v[finish].push_back(start);
	}
	nr = 0;
	for (i = 1; i <= n; i++)
	{
		if (viz[i] == 0)
		{
			dfs(i);
			nr++;
		}
	}
	g << nr;
	return 0;
}
