#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<math.h>
#include<functional>
#include<unordered_set>
#include<set>
#include<iomanip>
#include<bitset>
using namespace std;
int t, n,k,i,j,siz,dim,nr,power[11], fr[3030];
char s[1010];
string number;
int main()
{
	//ifstream f("file.in");
	//ofstream g("file.out");
	ifstream f("bunicu.in");
	ofstream g("bunicu.out");
	power[0] = 1;
	for (i = 1; i <= 10; i++)
		power[i] = 2 * power[i - 1];
	f >> t;
	for (k = 1; k <= t; k++)
	{
		memset(fr, 0, sizeof(fr));
		f >> n;
		for (j = 1; j <= n; j++)
		{
			f >> s;
			siz = n;
			nr = 0;
			for (i = siz - 1; i >= siz - 11 && i >= 0; i--)
				if (s[i] != '0')
				{
					nr += power[siz - 1 - i];
				}
			fr[nr] = 1;	
		}
		for(i=0;i<=1025;i++)
			if (fr[i] == 0)
			{
				bitset<11>numb(i);
				number = numb.to_string<char, std::string::traits_type, std::string::allocator_type>();
				for (j = n-1; j > 10; j--)
						g << '0';
				for (j = min(n - 1, 10); j >= 0; j--)
					g << numb[j];
				g << '\n';
				break;
			}
	}
	return 0;
}
